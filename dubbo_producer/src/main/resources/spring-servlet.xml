<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Spring Web 子容器配置文件 -->
	<context:annotation-config></context:annotation-config>
	<context:component-scan base-package="com.service.impl"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>


	<!-- 配置视图解析器: 如何把 handler 方法返回值解析为实际的物理视图 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 配置这个以后就可以获取静态资源了，配置完后也需要配置下面的 -->
	<mvc:default-servlet-handler />
	<!-- 在实际开发中通常都需配置 mvc:annotation-driven 标签 -->

	<!-- 进行次消息转换 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- <import resource="intg/intgBase.xml"/> -->
<!--配置拦截器, 多个拦截器,顺序执行 -->  
<!-- <mvc:interceptors>    
    <mvc:interceptor>    
        匹配的是url路径， 如果不配置或/**,将拦截所有的Controller  
        <mvc:mapping path="/rolePriControler/**" />   
        <bean class="com.baochewang.util.CommonInterceptor"></bean>    
    </mvc:interceptor>  
    当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  
</mvc:interceptors> --> 

<!--文件上传 -->
<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/> -->
</beans>